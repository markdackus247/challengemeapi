const CreboModel = require('./schema');

const { updateOneReturnObject, updateOneErr } = require('../../lib/models/updateOne');


// updateOne updates one crebo document from the crebo collection.
// updatedCrebo parameter is a object with all the updated crebo information. The id
// is also present in the updatedcrebo object.
// After the document is inserted this function will return with a default object.
// returned object will be generated by the function updateOnenewReturnObject().
async function updateOne(id, creboUpdates) {
    let updatedCreboObject;
    // console.log(`models>CreboMan>updateOne>updateOne>updatedCrebo: ${updatedCrebo}`);

    return CreboModel
        .findOne(
            {id: id}
        )
        .lean()
        .then(
            getResult => {
                updatedCreboObject = {...getResult, ...creboUpdates}

                return CreboModel
                    .updateOne(
                        {id: id},
                        updatedCreboObject
                    )
                    .then(
                        updateResult => {
                            error = new Error('updateResult failed.');
                            throw error;
                            return updateOneReturnObject(getResult, updatedCreboObject);
                        }
                    )
                    .catch(
                        err => {
                            console.log(`models>CreboMan>UpdateOne.js>updateOne>then>catch: `, err);

                            errMessage = updateOneErr([{
                                    code: "NoDbConnection",
                                    message: "Error while updating the database. My cause by connection problems.",
                                    detail: err.message,
                                    source: "CreboMan/updateOne/updateOne/then"
                                }])

                            const error = new Error(JSON.stringify(errMessage));

                            throw error;
                        }
                    )
                
            }
        )
        .catch(
            err => {
                console.log(err);
                throw err;
            }
        )

}

exports.updateOne = updateOne;